{"version":3,"sources":["components/Chart.js","App.js","index.js"],"names":["colorList","Chart","display","this","props","prefData","map","ele","index","key","type","name","prefName","dataKey","Number","stroke","data","margin","top","right","left","bottom","strokeDasharray","value","offset","position","tickFormatter","Intl","NumberFormat","format","formatter","React","Component","config","process","yearData","App","state","handleLoadData","bind","axios","get","headers","then","response","resultData","result","setState","event","regionIndex","target","id","slice","tempArr","hasOwnProperty","i","length","onClick","className","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09cf05c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Label } from 'recharts';\r\n\r\nconst colorList = [\r\n    \"#ff0000\",  \"#ffff00\",  \"#00ff00\", \"#00fff0\", \"#0000ff\",  \r\n    \"#8800ff\",  \"#ff00e6\",  \"#ff7b00\", \"#00ff6a\", \"#0088ff\",\r\n    \"#ff0000\",  \"#ffff00\",  \"#00ff00\", \"#00fff0\", \"#0000ff\",  \r\n    \"#8800ff\",  \"#ff00e6\",  \"#ff7b00\", \"#00ff6a\", \"#0088ff\",\r\n    \"#ff0000\",  \"#ffff00\",  \"#00ff00\", \"#00fff0\", \"#0000ff\",  \r\n    \"#8800ff\",  \"#ff00e6\",  \"#ff7b00\", \"#00ff6a\", \"#0088ff\",\r\n    \"#ff0000\",  \"#ffff00\",  \"#00ff00\", \"#00fff0\", \"#0000ff\",  \r\n    \"#8800ff\",  \"#ff00e6\",  \"#ff7b00\", \"#00ff6a\", \"#0088ff\",\r\n    \"#ff0000\",  \"#ffff00\",  \"#00ff00\", \"#00fff0\", \"#0000ff\",  \r\n    \"#8800ff\",  \"#ff00e6\",  \"#ff7b00\", \"#00ff6a\", \"#0088ff\",\r\n  ];\r\n\r\nclass Chart extends React.Component{\r\n\trender () {\r\n    const display = this.props.prefData? \r\n          this.props.prefData.map((ele, index) => {\r\n            return(\r\n              <Line \r\n                key={index}\r\n                type=\"monotone\" \r\n                name={ele.prefName}\r\n                dataKey={'value'+Number(index+1)} \r\n                stroke={colorList[index]} />\r\n            )\r\n          }) : ''\r\n  \treturn (\r\n      <ResponsiveContainer>\r\n      <LineChart \r\n        data={this.props.data}\r\n        margin={{ top: 30, right: 50, left: 50, bottom: 10 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"year\">\r\n          <Label value='年' offset={-10} position='insideBottomRight'/>\r\n        </XAxis>\r\n        <YAxis tickFormatter={(value) => new Intl.NumberFormat('en').format(value)}>\r\n          <Label value='人口数' offset={-20} position='insideTopLeft'/>\r\n        </YAxis>\r\n        <Tooltip \r\n          formatter={(value) => \r\n            new Intl.NumberFormat('en').format(value)}/>\r\n        {display}\r\n      </LineChart>\r\n      </ResponsiveContainer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart","import React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Chart from './components/Chart.js'\n\nlet genLink = 'https://opendata.resas-portal.go.jp/api/v1/prefectures'\nlet prefLink = 'https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=-&prefCode='\nlet config = {'X-API-KEY': process.env.REACT_APP_API_KEY};\nlet yearData = [\n  {\"year\":1960},{\"year\":1965},{\"year\":1970},{\"year\":1975},{\"year\":1980},\n  {\"year\":1985},{\"year\":1990},{\"year\":1995},{\"year\":2000},{\"year\":2005},\n  {\"year\":2010},{\"year\":2015},{\"year\":2020},{\"year\":2025},{\"year\":2030},\n  {\"year\":2035},{\"year\":2040},{\"year\":2045}]\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      data: yearData,\n      prefData: '',\n    }\n    this.handleLoadData = this.handleLoadData.bind(this)\n  }\n  componentDidMount() {\n    axios.get(genLink, {headers: config}).then((response) => {\n      let resultData = response.data.result \n      this.setState({prefData: resultData})\n    })\n  }\n  handleLoadData(event){\n    let regionIndex = Number(event.target.id.slice(5))\n    let tempArr = this.state.data\n    if(tempArr[0].hasOwnProperty('value'+regionIndex)){\n      for(let i=0; i<tempArr.length; i++){\n        delete tempArr[i]['value'+regionIndex]\n      }\n      this.setState({data: tempArr})\n    }\n    else{\n      axios.get(prefLink+regionIndex, {headers: config}).then((response) => {\n        let resultData = response.data.result.data[0].data\n        \n        for(let i=0; i<tempArr.length; i++){\n          tempArr[i]['value'+regionIndex] = resultData[i].value\n        }\n        this.setState({data: tempArr})\n      })\n    }\n  }\n  render(){\n    const display = this.state.prefData? \n      this.state.prefData.map((ele, index) => {\n          return(\n            <span key={index}>\n              <input type=\"checkbox\" \n                onClick={this.handleLoadData} \n                id={'value'+Number(index+1)} />\n              <label>{ele.prefName}</label>\n            </span>\n          )\n      }) : 'Loading buttons...'\n    return(\n      <div className='main'>\n        <p>都道府県人口構成 (1960-2045)</p>\n        <div className='chartSec'>\n        <Chart \n          data={this.state.data}\n          prefData={this.state.prefData}\n          color={this.state.color}/>\n        </div>\n        <div className='buttonSec'>        \n          {display}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}